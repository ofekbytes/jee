

jee tree example:
.
├── j2eeex1
│   └── JEEEx1
│       ├── build
│       │   └── classes
│       ├── src
│       └── WebContent
│           ├── META-INF
│           │   └── MANIFEST.MF
│           └── WEB-INF
│               └── lib
└── jeex


jee code example:

folder: 
WEB-INF

path: 
/home/yaron/workspace-j2ee/j2eeex1/JEEEx1/WebContent/WEB-INF

purpose: 
storing files that you don't want to be accessible on the web.
example: Data Files, Web xml files, java classes ,java servlet, 



- new jee project
-- add tomcat 9
-- add servlet (right click --> "new" --> "servlet")

-- servlet - 
servlet provide access to DataBases and run on the server side
process data for dynamic web pages

-- jee tree: after adding servlet (JeeServlet.java):

.
├── j2eeex1
│   └── JEEEx1
│       ├── build
│       │   └── classes
│       │       └── com
│       │           └── myserver
│       │               └── JeeServlet.class
│       ├── src
│       │   └── com
│       │       └── myserver
│       │           └── JeeServlet.java
│       └── WebContent
│           ├── META-INF
│           │   └── MANIFEST.MF
│           └── WEB-INF
│               └── lib
└── jeex


-- JSP apps use MVC pattern - 
--- Model - java code (access and process the data)
--- View - the interface the user sees 
--- Controller - communicator between Model and View.


-- add import to the servlet (JeeServlet.java) that can "print", "write" 
   and allow us to send "html" and "xml" to the client.

   import java.io.PrintWriter;


.
.
---[Create DataBase -and- Table, Inside MySql console]---
.
.
#
## Create DataBase "test1" ##
#
$ CREATE DATABASE test1;

#
## show DataBase List ##
#
$ show databases;
  +--------------------+
  | Database           |
  +--------------------+
  | information_schema |
  | mysql              |
  | performance_schema |
  | test1              |
  +--------------------+
  4 rows in set (0.00 sec)


#
## choose a DataBase "test" ## 
#
$ use test1;
  Database changed


#
## show DataBase Table List ##
#
$ show tables;
  Empty set (0.00 sec)


#
## Create DataBase Table "customer" ##
#
$ CREATE TABLE customer(first_name VARCHAR(30) NOT NULL, last_name VARCHAR(30) NOT NULL, phone VARCHAR(20) NOT NULL, cust_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY);


#
## show DataBase Table List ##
#
$ show tables;
+-----------------+
| Tables_in_test1 |
+-----------------+
| customer        |
+-----------------+
1 row in set (0.00 sec)


#
## show DataBase Table columns/fields ##
#
$ show columns from test1.customer;
+------------+------------------+------+-----+---------+----------------+
| Field      | Type             | Null | Key | Default | Extra          |
+------------+------------------+------+-----+---------+----------------+
| first_name | varchar(30)      | NO   |     | NULL    |                |
| last_name  | varchar(30)      | NO   |     | NULL    |                |
| phone      | varchar(20)      | NO   |     | NULL    |                |
| cust_id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
+------------+------------------+------+-----+---------+----------------+



#
## Create User and password ##
#
CREATE USER 'new-user-name'@'localhost' IDENTIFIED BY 'password';


#
## Change/Update root password in mysql console ##
#
$ UPDATE mysql.user SET Password=PASSWORD('NEWPW') WHERE User='root';


#
## Change/Update "user-name-jron" password in mysql console ##
#
$ UPDATE mysql.user SET Password=PASSWORD('NEWPassWord') WHERE User='jron';


#
## show user information ##
#
$ select * from mysql.user where user='user-name';


#
## show user "dbadmin" information ##
#
$ select User, Select_priv, Insert_priv, Update_priv, Delete_priv from mysql.user where user='dbadmin';
+---------+-------------+-------------+-------------+-------------+
| User    | Select_priv | Insert_priv | Update_priv | Delete_priv |
+---------+-------------+-------------+-------------+-------------+
| dbadmin | N           | N           | N           | N           |
+---------+-------------+-------------+-------------+-------------+
1 row in set (0.00 sec)


#
## grant permission to the user information ##
#
$ GRANT ALL PRIVILEGES ON test1.customer TO 'user-name'@'localhost' IDENTIFIED BY 'new-password';

## dbadmin
$ GRANT ALL PRIVILEGES ON test1.customer TO 'dbadmin'@'localhost' IDENTIFIED BY '2Wsxcde3';


#
## revoke permission to the user and drop (remove) the user ##
#
$ REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'yron'@'localhost';
Query OK, 0 rows affected (0.00 sec)

$ DROP USER 'yron'@'localhost';
Query OK, 0 rows affected (0.00 sec)




## insert ##
INSERT INTO CUSTOMER (first_name, last_name, phone, cust_id) VALUES ('shalom', 'lizrovitch', '03-689-1111', NULL)



